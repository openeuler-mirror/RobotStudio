// @generated by protobuf-ts 2.9.0 with parameter use_proto_field_name
// @generated from protobuf file "robot_grpc_service.proto" (package "rosc", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { RobotGrpcService } from "./robot_grpc_service";
import type { CalibrateRobotParamResponse } from "./robot_grpc_service";
import type { CalibrateRobotParamRequest } from "./robot_grpc_service";
import type { SetRunningModeResponse } from "./robot_grpc_service";
import type { SetRunningModeRequest } from "./robot_grpc_service";
import type { SaveStageSettingResponse } from "./robot_grpc_service";
import type { SaveStageSettingRequest } from "./robot_grpc_service";
import type { GetStageSettingResponse } from "./robot_grpc_service";
import type { GetStageSettingRequest } from "./robot_grpc_service";
import type { FindZeroResponse } from "./robot_grpc_service";
import type { FindZeroRequest } from "./robot_grpc_service";
import type { CalibrateWaferSensorResponse } from "./robot_grpc_service";
import type { CalibrateWaferSensorRequest } from "./robot_grpc_service";
import type { SaveIOInterlockSettingResponse } from "./robot_grpc_service";
import type { SaveIOInterlockSettingRequest } from "./robot_grpc_service";
import type { GetIOInterlockSettingResponse } from "./robot_grpc_service";
import type { GetIOInterlockSettingRequest } from "./robot_grpc_service";
import type { CalibrateAWCSensorResponse } from "./robot_grpc_service";
import type { CalibrateAWCSensorRequest } from "./robot_grpc_service";
import type { SaveAWCConfigResponse } from "./robot_grpc_service";
import type { SaveAWCConfigRequest } from "./robot_grpc_service";
import type { GetAWCConfigResponse } from "./robot_grpc_service";
import type { GetAWCConfigRequest } from "./robot_grpc_service";
import type { UpdatePointFileResponse } from "./robot_grpc_service";
import type { UpdatePointFileRequest } from "./robot_grpc_service";
import type { GetServoEncodeResponse } from "./robot_grpc_service";
import type { GetServoEncodeRequest } from "./robot_grpc_service";
import type { RedifyControllerIPResponse } from "./robot_grpc_service";
import type { RedifyControllerIPRequest } from "./robot_grpc_service";
import type { SaveEnableMappingResponse } from "./robot_grpc_service";
import type { SaveEnableMappingRequest } from "./robot_grpc_service";
import type { GetEnableMappingResponse } from "./robot_grpc_service";
import type { GetEnableMappingRequest } from "./robot_grpc_service";
import type { GetSolenoidResponse } from "./robot_grpc_service";
import type { GetSolenoidRequest } from "./robot_grpc_service";
import type { SetSolenoidResponse } from "./robot_grpc_service";
import type { SetSolenoidRequest } from "./robot_grpc_service";
import type { SaveMappingSettingResponse } from "./robot_grpc_service";
import type { SaveMappingSettingRequest } from "./robot_grpc_service";
import type { MappingSettingResponse } from "./robot_grpc_service";
import type { MappingSettingRequest } from "./robot_grpc_service";
import type { MappingCalibrateResponse } from "./robot_grpc_service";
import type { MappingCalibrateRequest } from "./robot_grpc_service";
import type { SingleAxisZeroCalibrateResponse } from "./robot_grpc_service";
import type { SingleAxisZeroCalibrateRequest } from "./robot_grpc_service";
import type { StopGetLayoutRobotPositionResponse } from "./robot_grpc_service";
import type { StopGetLayoutRobotPositionRequest } from "./robot_grpc_service";
import type { GetLayoutRobotPositionResponse } from "./robot_grpc_service";
import type { GetLayoutRobotPositionRequest } from "./robot_grpc_service";
import type { StartLayoutSimulationResponse } from "./robot_grpc_service";
import type { StartLayoutSimulationRequest } from "./robot_grpc_service";
import type { SlaveStateResponse } from "./robot_grpc_service";
import type { SlaveStateRequest } from "./robot_grpc_service";
import type { DeleteExceptionResponse } from "./robot_grpc_service";
import type { DeleteExceptionRequest } from "./robot_grpc_service";
import type { GetExceptionResponse } from "./robot_grpc_service";
import type { GetExceptionRequest } from "./robot_grpc_service";
import type { GetStreamExceptionResponse } from "./robot_grpc_service";
import type { GetStreamExceptionRequest } from "./robot_grpc_service";
import type { DuplexStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { SearchMappingResponse } from "./robot_grpc_service";
import type { SearchMappingRequest } from "./robot_grpc_service";
import type { StopGetIOInputStateResponse } from "./robot_grpc_service";
import type { StopGetIOInputStateRequest } from "./robot_grpc_service";
import type { GetIOInputStateResponse } from "./robot_grpc_service";
import type { GetIOInputStateRequest } from "./robot_grpc_service";
import type { GetIOOutputStateResponse } from "./robot_grpc_service";
import type { GetIOOutputStateRequest } from "./robot_grpc_service";
import type { SetIOOutputStateResponse } from "./robot_grpc_service";
import type { SetIOOutputStateRequest } from "./robot_grpc_service";
import type { GetPutWaferStopResponse } from "./robot_grpc_service";
import type { GetPutWaferStopRequest } from "./robot_grpc_service";
import type { GetPutWaferResponse } from "./robot_grpc_service";
import type { GetPutWaferRequest } from "./robot_grpc_service";
import type { DebugWaferResponse } from "./robot_grpc_service";
import type { DebugWaferRequest } from "./robot_grpc_service";
import type { OperateWaferResponse } from "./robot_grpc_service";
import type { OperateWaferRequest } from "./robot_grpc_service";
import type { TeachInstructionResponse } from "./robot_grpc_service";
import type { TeachInstructionRequest } from "./robot_grpc_service";
import type { GoTeachJointResponse } from "./robot_grpc_service";
import type { GoTeachJointRequest } from "./robot_grpc_service";
import type { DownloadPointFileResponse } from "./robot_grpc_service";
import type { DownloadPointFileRequest } from "./robot_grpc_service";
import type { GetAllPointNamesResponse } from "./robot_grpc_service";
import type { GetAllPointNamesRequest } from "./robot_grpc_service";
import type { DeletePointResponse } from "./robot_grpc_service";
import type { DeletePointRequest } from "./robot_grpc_service";
import type { SaveSorterConfigResponse } from "./robot_grpc_service";
import type { SaveSorterConfigRequest } from "./robot_grpc_service";
import type { GetSorterConfigResponse } from "./robot_grpc_service";
import type { GetSorterConfigRequest } from "./robot_grpc_service";
import type { SaveSpeedConfigResponse } from "./robot_grpc_service";
import type { SaveSpeedConfigRequest } from "./robot_grpc_service";
import type { GetSpeedConfigResponse } from "./robot_grpc_service";
import type { GetSpeedConfigRequest } from "./robot_grpc_service";
import type { GetIOSettingResponse } from "./robot_grpc_service";
import type { GetDeviceSettingResponse } from "./robot_grpc_service";
import type { GetJointSettingResponse } from "./robot_grpc_service";
import type { SaveIOSettingResponse } from "./robot_grpc_service";
import type { SaveIOSettingRequest } from "./robot_grpc_service";
import type { SaveJointSettingResponse } from "./robot_grpc_service";
import type { SaveJointSettingRequest } from "./robot_grpc_service";
import type { RobotSettingResponse } from "./robot_grpc_service";
import type { RobotSettingRequest } from "./robot_grpc_service";
import type { SetJogVelocityLevelRequest } from "./robot_grpc_service";
import type { JogVelocityResponse } from "./robot_grpc_service";
import type { TeachMoveResponse } from "./robot_grpc_service";
import type { TeachMoveRequest } from "./robot_grpc_service";
import type { TeachGetVelocityResponse } from "./robot_grpc_service";
import type { TeachGetVelocityRequest } from "./robot_grpc_service";
import type { TeachSetVelocityResponse } from "./robot_grpc_service";
import type { TeachSetVelocityRequest } from "./robot_grpc_service";
import type { TeachSavePositionResponse } from "./robot_grpc_service";
import type { TeachSavePositionRequest } from "./robot_grpc_service";
import type { TeachMoveStepResponse } from "./robot_grpc_service";
import type { TeachMoveStepRequest } from "./robot_grpc_service";
import type { TeachJogStopResponse } from "./robot_grpc_service";
import type { TeachJogStopRequest } from "./robot_grpc_service";
import type { TeachJogStartResponse } from "./robot_grpc_service";
import type { TeachJogStartRequest } from "./robot_grpc_service";
import type { EmergencyRecoverResponse } from "./robot_grpc_service";
import type { EmergencyRecoverRequest } from "./robot_grpc_service";
import type { EmergencyStopResponse } from "./robot_grpc_service";
import type { EmergencyStopRequest } from "./robot_grpc_service";
import type { TeachBoardStopStatusStreamResponse } from "./robot_grpc_service";
import type { TeachBoardStartStatusStreamResponse } from "./robot_grpc_service";
import type { TeachStreamStopGetJointsResponse } from "./robot_grpc_service";
import type { TeachStreamStartGetJointsResponse } from "./robot_grpc_service";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { ClearErrorResponse } from "./robot_grpc_service";
import type { PowerOffResponse } from "./robot_grpc_service";
import type { PowerOnResponse } from "./robot_grpc_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { PingResponse } from "./robot_grpc_service";
import type { Empty } from "./google/protobuf/empty";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * *
 * 为了保证接口设计的简约、清晰、和有效，请遵循一下设计原则。
 * 1.命名规则请保持一致，大写字母开头的驼峰命名规则，避免使用缩写。
 * 2.针对不同的设备及机型的专用接口，请以设备型号名作为前缀，例如openEulerRobotDeviceXxx/M124De
 *   viceXxx，机型信息应该非常明确，以便于前端在调用接口时进行区分，应尽可能避免一个接
 *   口仅适用于其中几个机型，而不适用于另外几个机型。
 * 3.如果非特殊前缀开头的接口，应该能在所有进行上使用和调用
 * 4.避免传递的信息字段，仅在某种情况下才能生效。如果有需要，建议采用不同的接口进行区分
 *   实现。
 * 5.每个接口请写注释文档
 *
 * @generated from protobuf service rosc.RobotGrpcService
 */
export interface IRobotGrpcServiceClient {
    /**
     * 测试网络是否联通
     *
     * @generated from protobuf rpc: Ping(google.protobuf.Empty) returns (rosc.PingResponse);
     */
    ping(input: Empty, options?: RpcOptions): UnaryCall<Empty, PingResponse>;
    /**
     * 机器人上电
     *
     * @generated from protobuf rpc: PowerOn(google.protobuf.Empty) returns (rosc.PowerOnResponse);
     */
    powerOn(input: Empty, options?: RpcOptions): UnaryCall<Empty, PowerOnResponse>;
    /**
     * 机器人下电
     *
     * @generated from protobuf rpc: PowerOff(google.protobuf.Empty) returns (rosc.PowerOffResponse);
     */
    powerOff(input: Empty, options?: RpcOptions): UnaryCall<Empty, PowerOffResponse>;
    /**
     * 机器人清错
     *
     * @generated from protobuf rpc: ClearError(google.protobuf.Empty) returns (rosc.ClearErrorResponse);
     */
    clearError(input: Empty, options?: RpcOptions): UnaryCall<Empty, ClearErrorResponse>;
    /**
     * 示教过程中，开启获得关节数据流
     *
     * @generated from protobuf rpc: TeachStreamStartGetJoints(google.protobuf.Empty) returns (stream rosc.TeachStreamStartGetJointsResponse);
     */
    teachStreamStartGetJoints(input: Empty, options?: RpcOptions): ServerStreamingCall<Empty, TeachStreamStartGetJointsResponse>;
    /**
     * 示教过程中，停止获得关节数据流
     *
     * @generated from protobuf rpc: TeachStreamStopGetJoints(google.protobuf.Empty) returns (rosc.TeachStreamStopGetJointsResponse);
     */
    teachStreamStopGetJoints(input: Empty, options?: RpcOptions): UnaryCall<Empty, TeachStreamStopGetJointsResponse>;
    /**
     * TeachBoard开启状态流
     *
     * @generated from protobuf rpc: TeachBoardStartStatusStream(google.protobuf.Empty) returns (stream rosc.TeachBoardStartStatusStreamResponse);
     */
    teachBoardStartStatusStream(input: Empty, options?: RpcOptions): ServerStreamingCall<Empty, TeachBoardStartStatusStreamResponse>;
    /**
     * TeachBoard关闭状态流
     *
     * @generated from protobuf rpc: TeachBoardStopStatusStream(google.protobuf.Empty) returns (rosc.TeachBoardStopStatusStreamResponse);
     */
    teachBoardStopStatusStream(input: Empty, options?: RpcOptions): UnaryCall<Empty, TeachBoardStopStatusStreamResponse>;
    /**
     * 急停
     *
     * @generated from protobuf rpc: EmergencyStop(rosc.EmergencyStopRequest) returns (rosc.EmergencyStopResponse);
     */
    emergencyStop(input: EmergencyStopRequest, options?: RpcOptions): UnaryCall<EmergencyStopRequest, EmergencyStopResponse>;
    /**
     * 急停恢复
     *
     * @generated from protobuf rpc: EmergencyRecover(rosc.EmergencyRecoverRequest) returns (rosc.EmergencyRecoverResponse);
     */
    emergencyRecover(input: EmergencyRecoverRequest, options?: RpcOptions): UnaryCall<EmergencyRecoverRequest, EmergencyRecoverResponse>;
    /**
     * 示教相关接口
     * 开始示教liqingfengzzu@163.com
     * TODO(liqingfengzzu@163.com): 该接口临时废弃，未正常实现和测试
     *
     * @deprecated
     * @generated from protobuf rpc: TeachJogStart(rosc.TeachJogStartRequest) returns (rosc.TeachJogStartResponse);
     */
    teachJogStart(input: TeachJogStartRequest, options?: RpcOptions): UnaryCall<TeachJogStartRequest, TeachJogStartResponse>;
    /**
     * 结束示教
     * TODO(liqingfengzzu@163.com): 该接口临时废弃，未正常实现和测试
     *
     * @deprecated
     * @generated from protobuf rpc: TeachJogStop(rosc.TeachJogStopRequest) returns (rosc.TeachJogStopResponse);
     */
    teachJogStop(input: TeachJogStopRequest, options?: RpcOptions): UnaryCall<TeachJogStopRequest, TeachJogStopResponse>;
    /**
     * 示教单独点动
     *
     * @generated from protobuf rpc: TeachMoveStep(rosc.TeachMoveStepRequest) returns (rosc.TeachMoveStepResponse);
     */
    teachMoveStep(input: TeachMoveStepRequest, options?: RpcOptions): UnaryCall<TeachMoveStepRequest, TeachMoveStepResponse>;
    /**
     * @generated from protobuf rpc: TeachSavePosition(rosc.TeachSavePositionRequest) returns (rosc.TeachSavePositionResponse);
     */
    teachSavePosition(input: TeachSavePositionRequest, options?: RpcOptions): UnaryCall<TeachSavePositionRequest, TeachSavePositionResponse>;
    /**
     * @generated from protobuf rpc: TeachSetVelocity(rosc.TeachSetVelocityRequest) returns (rosc.TeachSetVelocityResponse);
     */
    teachSetVelocity(input: TeachSetVelocityRequest, options?: RpcOptions): UnaryCall<TeachSetVelocityRequest, TeachSetVelocityResponse>;
    /**
     * @generated from protobuf rpc: TeachGetVelocity(rosc.TeachGetVelocityRequest) returns (rosc.TeachGetVelocityResponse);
     */
    teachGetVelocity(input: TeachGetVelocityRequest, options?: RpcOptions): UnaryCall<TeachGetVelocityRequest, TeachGetVelocityResponse>;
    /**
     * @generated from protobuf rpc: TeachMove(rosc.TeachMoveRequest) returns (rosc.TeachMoveResponse);
     */
    teachMove(input: TeachMoveRequest, options?: RpcOptions): UnaryCall<TeachMoveRequest, TeachMoveResponse>;
    /**
     * *
     * 获取jog速度的配置
     *
     * @generated from protobuf rpc: GetJogVelocity(google.protobuf.Empty) returns (rosc.JogVelocityResponse);
     */
    getJogVelocity(input: Empty, options?: RpcOptions): UnaryCall<Empty, JogVelocityResponse>;
    /**
     * @generated from protobuf rpc: SetJogVelocityLevel(rosc.SetJogVelocityLevelRequest) returns (rosc.JogVelocityResponse);
     */
    setJogVelocityLevel(input: SetJogVelocityLevelRequest, options?: RpcOptions): UnaryCall<SetJogVelocityLevelRequest, JogVelocityResponse>;
    /**
     * 配置管理
     *
     * @generated from protobuf rpc: GetRobotSetting(rosc.RobotSettingRequest) returns (rosc.RobotSettingResponse);
     */
    getRobotSetting(input: RobotSettingRequest, options?: RpcOptions): UnaryCall<RobotSettingRequest, RobotSettingResponse>;
    /**
     * @generated from protobuf rpc: SaveJointSetting(rosc.SaveJointSettingRequest) returns (rosc.SaveJointSettingResponse);
     */
    saveJointSetting(input: SaveJointSettingRequest, options?: RpcOptions): UnaryCall<SaveJointSettingRequest, SaveJointSettingResponse>;
    /**
     * @generated from protobuf rpc: SaveIOSetting(rosc.SaveIOSettingRequest) returns (rosc.SaveIOSettingResponse);
     */
    saveIOSetting(input: SaveIOSettingRequest, options?: RpcOptions): UnaryCall<SaveIOSettingRequest, SaveIOSettingResponse>;
    /**
     * 获取关节配置
     *
     * @generated from protobuf rpc: GetJointSetting(google.protobuf.Empty) returns (rosc.GetJointSettingResponse);
     */
    getJointSetting(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetJointSettingResponse>;
    /**
     * 配置设备配置
     *
     * @generated from protobuf rpc: GetDeviceSetting(google.protobuf.Empty) returns (rosc.GetDeviceSettingResponse);
     */
    getDeviceSetting(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetDeviceSettingResponse>;
    /**
     * 获取IO配置
     *
     * @generated from protobuf rpc: GetIOSetting(google.protobuf.Empty) returns (rosc.GetIOSettingResponse);
     */
    getIOSetting(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetIOSettingResponse>;
    /**
     * 获得速度配置
     *
     * @generated from protobuf rpc: GetSpeedConfig(rosc.GetSpeedConfigRequest) returns (rosc.GetSpeedConfigResponse);
     */
    getSpeedConfig(input: GetSpeedConfigRequest, options?: RpcOptions): UnaryCall<GetSpeedConfigRequest, GetSpeedConfigResponse>;
    /**
     * 保存速度配置
     *
     * @generated from protobuf rpc: SaveSpeedConfig(rosc.SaveSpeedConfigRequest) returns (rosc.SaveSpeedConfigResponse);
     */
    saveSpeedConfig(input: SaveSpeedConfigRequest, options?: RpcOptions): UnaryCall<SaveSpeedConfigRequest, SaveSpeedConfigResponse>;
    /**
     * @generated from protobuf rpc: GetSorterConfig(rosc.GetSorterConfigRequest) returns (rosc.GetSorterConfigResponse);
     */
    getSorterConfig(input: GetSorterConfigRequest, options?: RpcOptions): UnaryCall<GetSorterConfigRequest, GetSorterConfigResponse>;
    /**
     * @generated from protobuf rpc: SaveSorterConfig(rosc.SaveSorterConfigRequest) returns (rosc.SaveSorterConfigResponse);
     */
    saveSorterConfig(input: SaveSorterConfigRequest, options?: RpcOptions): UnaryCall<SaveSorterConfigRequest, SaveSorterConfigResponse>;
    /**
     * 数据管理
     *
     * @generated from protobuf rpc: DeletePoint(rosc.DeletePointRequest) returns (rosc.DeletePointResponse);
     */
    deletePoint(input: DeletePointRequest, options?: RpcOptions): UnaryCall<DeletePointRequest, DeletePointResponse>;
    /**
     * @generated from protobuf rpc: GetAllPointNames(rosc.GetAllPointNamesRequest) returns (rosc.GetAllPointNamesResponse);
     */
    getAllPointNames(input: GetAllPointNamesRequest, options?: RpcOptions): UnaryCall<GetAllPointNamesRequest, GetAllPointNamesResponse>;
    /**
     * @generated from protobuf rpc: DownloadPointFile(rosc.DownloadPointFileRequest) returns (stream rosc.DownloadPointFileResponse);
     */
    downloadPointFile(input: DownloadPointFileRequest, options?: RpcOptions): ServerStreamingCall<DownloadPointFileRequest, DownloadPointFileResponse>;
    /**
     * @generated from protobuf rpc: GoTeachJoint(rosc.GoTeachJointRequest) returns (rosc.GoTeachJointResponse);
     */
    goTeachJoint(input: GoTeachJointRequest, options?: RpcOptions): UnaryCall<GoTeachJointRequest, GoTeachJointResponse>;
    /**
     * 指令
     *
     * @generated from protobuf rpc: TeachInstruction(rosc.TeachInstructionRequest) returns (rosc.TeachInstructionResponse);
     */
    teachInstruction(input: TeachInstructionRequest, options?: RpcOptions): UnaryCall<TeachInstructionRequest, TeachInstructionResponse>;
    /**
     * @generated from protobuf rpc: OperateWafer(rosc.OperateWaferRequest) returns (rosc.OperateWaferResponse);
     */
    operateWafer(input: OperateWaferRequest, options?: RpcOptions): UnaryCall<OperateWaferRequest, OperateWaferResponse>;
    /**
     * @generated from protobuf rpc: DebugWafer(rosc.DebugWaferRequest) returns (rosc.DebugWaferResponse);
     */
    debugWafer(input: DebugWaferRequest, options?: RpcOptions): UnaryCall<DebugWaferRequest, DebugWaferResponse>;
    /**
     * @generated from protobuf rpc: GetPutWafer(rosc.GetPutWaferRequest) returns (rosc.GetPutWaferResponse);
     */
    getPutWafer(input: GetPutWaferRequest, options?: RpcOptions): UnaryCall<GetPutWaferRequest, GetPutWaferResponse>;
    /**
     * @generated from protobuf rpc: GetPutWaferStop(rosc.GetPutWaferStopRequest) returns (rosc.GetPutWaferStopResponse);
     */
    getPutWaferStop(input: GetPutWaferStopRequest, options?: RpcOptions): UnaryCall<GetPutWaferStopRequest, GetPutWaferStopResponse>;
    /**
     * IO处理
     *
     * @generated from protobuf rpc: SetIOOutputState(rosc.SetIOOutputStateRequest) returns (rosc.SetIOOutputStateResponse);
     */
    setIOOutputState(input: SetIOOutputStateRequest, options?: RpcOptions): UnaryCall<SetIOOutputStateRequest, SetIOOutputStateResponse>;
    /**
     * @generated from protobuf rpc: GetIOOutputState(rosc.GetIOOutputStateRequest) returns (stream rosc.GetIOOutputStateResponse);
     */
    getIOOutputState(input: GetIOOutputStateRequest, options?: RpcOptions): ServerStreamingCall<GetIOOutputStateRequest, GetIOOutputStateResponse>;
    /**
     * @generated from protobuf rpc: GetIOInputState(rosc.GetIOInputStateRequest) returns (stream rosc.GetIOInputStateResponse);
     */
    getIOInputState(input: GetIOInputStateRequest, options?: RpcOptions): ServerStreamingCall<GetIOInputStateRequest, GetIOInputStateResponse>;
    /**
     * @generated from protobuf rpc: StopGetIOInputState(rosc.StopGetIOInputStateRequest) returns (rosc.StopGetIOInputStateResponse);
     */
    stopGetIOInputState(input: StopGetIOInputStateRequest, options?: RpcOptions): UnaryCall<StopGetIOInputStateRequest, StopGetIOInputStateResponse>;
    /**
     * 查询mapping
     *
     * @generated from protobuf rpc: SearchMapping(rosc.SearchMappingRequest) returns (rosc.SearchMappingResponse);
     */
    searchMapping(input: SearchMappingRequest, options?: RpcOptions): UnaryCall<SearchMappingRequest, SearchMappingResponse>;
    /**
     * 异常处理
     *
     * @generated from protobuf rpc: GetStreamException(stream rosc.GetStreamExceptionRequest) returns (stream rosc.GetStreamExceptionResponse);
     */
    getStreamException(options?: RpcOptions): DuplexStreamingCall<GetStreamExceptionRequest, GetStreamExceptionResponse>;
    /**
     * @generated from protobuf rpc: GetException(rosc.GetExceptionRequest) returns (rosc.GetExceptionResponse);
     */
    getException(input: GetExceptionRequest, options?: RpcOptions): UnaryCall<GetExceptionRequest, GetExceptionResponse>;
    /**
     * @generated from protobuf rpc: DeleteException(rosc.DeleteExceptionRequest) returns (rosc.DeleteExceptionResponse);
     */
    deleteException(input: DeleteExceptionRequest, options?: RpcOptions): UnaryCall<DeleteExceptionRequest, DeleteExceptionResponse>;
    /**
     * 伺服状态
     *
     * @generated from protobuf rpc: SlaveState(stream rosc.SlaveStateRequest) returns (stream rosc.SlaveStateResponse);
     */
    slaveState(options?: RpcOptions): DuplexStreamingCall<SlaveStateRequest, SlaveStateResponse>;
    /**
     * Layout
     *
     * @generated from protobuf rpc: StartLayoutSimulation(rosc.StartLayoutSimulationRequest) returns (rosc.StartLayoutSimulationResponse);
     */
    startLayoutSimulation(input: StartLayoutSimulationRequest, options?: RpcOptions): UnaryCall<StartLayoutSimulationRequest, StartLayoutSimulationResponse>;
    /**
     * @generated from protobuf rpc: GetLayoutRobotPositionStream(rosc.GetLayoutRobotPositionRequest) returns (stream rosc.GetLayoutRobotPositionResponse);
     */
    getLayoutRobotPositionStream(input: GetLayoutRobotPositionRequest, options?: RpcOptions): ServerStreamingCall<GetLayoutRobotPositionRequest, GetLayoutRobotPositionResponse>;
    /**
     * @generated from protobuf rpc: StopGetLayoutRobotPositionStream(rosc.StopGetLayoutRobotPositionRequest) returns (rosc.StopGetLayoutRobotPositionResponse);
     */
    stopGetLayoutRobotPositionStream(input: StopGetLayoutRobotPositionRequest, options?: RpcOptions): UnaryCall<StopGetLayoutRobotPositionRequest, StopGetLayoutRobotPositionResponse>;
    /**
     * 单轴零点标定
     *
     * @generated from protobuf rpc: SingleAxisZeroCalibrate(rosc.SingleAxisZeroCalibrateRequest) returns (rosc.SingleAxisZeroCalibrateResponse);
     */
    singleAxisZeroCalibrate(input: SingleAxisZeroCalibrateRequest, options?: RpcOptions): UnaryCall<SingleAxisZeroCalibrateRequest, SingleAxisZeroCalibrateResponse>;
    /**
     * @generated from protobuf rpc: MappingCalibrate(rosc.MappingCalibrateRequest) returns (rosc.MappingCalibrateResponse);
     */
    mappingCalibrate(input: MappingCalibrateRequest, options?: RpcOptions): UnaryCall<MappingCalibrateRequest, MappingCalibrateResponse>;
    /**
     * @generated from protobuf rpc: MappingSetting(rosc.MappingSettingRequest) returns (rosc.MappingSettingResponse);
     */
    mappingSetting(input: MappingSettingRequest, options?: RpcOptions): UnaryCall<MappingSettingRequest, MappingSettingResponse>;
    /**
     * @generated from protobuf rpc: SaveMappingSetting(rosc.SaveMappingSettingRequest) returns (rosc.SaveMappingSettingResponse);
     */
    saveMappingSetting(input: SaveMappingSettingRequest, options?: RpcOptions): UnaryCall<SaveMappingSettingRequest, SaveMappingSettingResponse>;
    /**
     * @generated from protobuf rpc: SetSolenoid(rosc.SetSolenoidRequest) returns (rosc.SetSolenoidResponse);
     */
    setSolenoid(input: SetSolenoidRequest, options?: RpcOptions): UnaryCall<SetSolenoidRequest, SetSolenoidResponse>;
    /**
     * @generated from protobuf rpc: GetSolenoid(rosc.GetSolenoidRequest) returns (rosc.GetSolenoidResponse);
     */
    getSolenoid(input: GetSolenoidRequest, options?: RpcOptions): UnaryCall<GetSolenoidRequest, GetSolenoidResponse>;
    /**
     * @generated from protobuf rpc: GetEnableMapping(rosc.GetEnableMappingRequest) returns (rosc.GetEnableMappingResponse);
     */
    getEnableMapping(input: GetEnableMappingRequest, options?: RpcOptions): UnaryCall<GetEnableMappingRequest, GetEnableMappingResponse>;
    /**
     * @generated from protobuf rpc: SaveEnableMapping(rosc.SaveEnableMappingRequest) returns (rosc.SaveEnableMappingResponse);
     */
    saveEnableMapping(input: SaveEnableMappingRequest, options?: RpcOptions): UnaryCall<SaveEnableMappingRequest, SaveEnableMappingResponse>;
    /**
     * 修改控制系统ip
     *
     * @generated from protobuf rpc: RedifyControllerIP(rosc.RedifyControllerIPRequest) returns (rosc.RedifyControllerIPResponse);
     */
    redifyControllerIP(input: RedifyControllerIPRequest, options?: RpcOptions): UnaryCall<RedifyControllerIPRequest, RedifyControllerIPResponse>;
    /**
     * 获取伺服编码器信息
     *
     * @generated from protobuf rpc: GetServoEncode(rosc.GetServoEncodeRequest) returns (rosc.GetServoEncodeResponse);
     */
    getServoEncode(input: GetServoEncodeRequest, options?: RpcOptions): UnaryCall<GetServoEncodeRequest, GetServoEncodeResponse>;
    /**
     * @generated from protobuf rpc: UpdatePointFile(stream rosc.UpdatePointFileRequest) returns (stream rosc.UpdatePointFileResponse);
     */
    updatePointFile(options?: RpcOptions): DuplexStreamingCall<UpdatePointFileRequest, UpdatePointFileResponse>;
    /**
     * AWC配置管理
     *
     * @generated from protobuf rpc: GetAWCConfig(rosc.GetAWCConfigRequest) returns (rosc.GetAWCConfigResponse);
     */
    getAWCConfig(input: GetAWCConfigRequest, options?: RpcOptions): UnaryCall<GetAWCConfigRequest, GetAWCConfigResponse>;
    /**
     * @generated from protobuf rpc: SaveAWCConfig(rosc.SaveAWCConfigRequest) returns (rosc.SaveAWCConfigResponse);
     */
    saveAWCConfig(input: SaveAWCConfigRequest, options?: RpcOptions): UnaryCall<SaveAWCConfigRequest, SaveAWCConfigResponse>;
    /**
     * @generated from protobuf rpc: CalibrateAWCSensor(rosc.CalibrateAWCSensorRequest) returns (rosc.CalibrateAWCSensorResponse);
     */
    calibrateAWCSensor(input: CalibrateAWCSensorRequest, options?: RpcOptions): UnaryCall<CalibrateAWCSensorRequest, CalibrateAWCSensorResponse>;
    /**
     * @generated from protobuf rpc: GetIOInterlockSetting(rosc.GetIOInterlockSettingRequest) returns (rosc.GetIOInterlockSettingResponse);
     */
    getIOInterlockSetting(input: GetIOInterlockSettingRequest, options?: RpcOptions): UnaryCall<GetIOInterlockSettingRequest, GetIOInterlockSettingResponse>;
    /**
     * @generated from protobuf rpc: SaveIOInterlockSetting(rosc.SaveIOInterlockSettingRequest) returns (rosc.SaveIOInterlockSettingResponse);
     */
    saveIOInterlockSetting(input: SaveIOInterlockSettingRequest, options?: RpcOptions): UnaryCall<SaveIOInterlockSettingRequest, SaveIOInterlockSettingResponse>;
    /**
     * @generated from protobuf rpc: CalibrateWaferSensor(rosc.CalibrateWaferSensorRequest) returns (rosc.CalibrateWaferSensorResponse);
     */
    calibrateWaferSensor(input: CalibrateWaferSensorRequest, options?: RpcOptions): UnaryCall<CalibrateWaferSensorRequest, CalibrateWaferSensorResponse>;
    /**
     * @generated from protobuf rpc: FindZero(rosc.FindZeroRequest) returns (rosc.FindZeroResponse);
     */
    findZero(input: FindZeroRequest, options?: RpcOptions): UnaryCall<FindZeroRequest, FindZeroResponse>;
    /**
     * @generated from protobuf rpc: GetStageSetting(rosc.GetStageSettingRequest) returns (rosc.GetStageSettingResponse);
     */
    getStageSetting(input: GetStageSettingRequest, options?: RpcOptions): UnaryCall<GetStageSettingRequest, GetStageSettingResponse>;
    /**
     * @generated from protobuf rpc: SaveStageSetting(rosc.SaveStageSettingRequest) returns (rosc.SaveStageSettingResponse);
     */
    saveStageSetting(input: SaveStageSettingRequest, options?: RpcOptions): UnaryCall<SaveStageSettingRequest, SaveStageSettingResponse>;
    /**
     * 设置运行模式
     *
     * @generated from protobuf rpc: SetRunningMode(rosc.SetRunningModeRequest) returns (rosc.SetRunningModeResponse);
     */
    setRunningMode(input: SetRunningModeRequest, options?: RpcOptions): UnaryCall<SetRunningModeRequest, SetRunningModeResponse>;
    /**
     * @generated from protobuf rpc: CalibrateRobotParam(rosc.CalibrateRobotParamRequest) returns (rosc.CalibrateRobotParamResponse);
     */
    calibrateRobotParam(input: CalibrateRobotParamRequest, options?: RpcOptions): UnaryCall<CalibrateRobotParamRequest, CalibrateRobotParamResponse>;
}
/**
 * *
 * 为了保证接口设计的简约、清晰、和有效，请遵循一下设计原则。
 * 1.命名规则请保持一致，大写字母开头的驼峰命名规则，避免使用缩写。
 * 2.针对不同的设备及机型的专用接口，请以设备型号名作为前缀，例如openEulerRobotDeviceXxx/M124De
 *   viceXxx，机型信息应该非常明确，以便于前端在调用接口时进行区分，应尽可能避免一个接
 *   口仅适用于其中几个机型，而不适用于另外几个机型。
 * 3.如果非特殊前缀开头的接口，应该能在所有进行上使用和调用
 * 4.避免传递的信息字段，仅在某种情况下才能生效。如果有需要，建议采用不同的接口进行区分
 *   实现。
 * 5.每个接口请写注释文档
 *
 * @generated from protobuf service rosc.RobotGrpcService
 */
export class RobotGrpcServiceClient implements IRobotGrpcServiceClient, ServiceInfo {
    typeName = RobotGrpcService.typeName;
    methods = RobotGrpcService.methods;
    options = RobotGrpcService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * 测试网络是否联通
     *
     * @generated from protobuf rpc: Ping(google.protobuf.Empty) returns (rosc.PingResponse);
     */
    ping(input: Empty, options?: RpcOptions): UnaryCall<Empty, PingResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, PingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 机器人上电
     *
     * @generated from protobuf rpc: PowerOn(google.protobuf.Empty) returns (rosc.PowerOnResponse);
     */
    powerOn(input: Empty, options?: RpcOptions): UnaryCall<Empty, PowerOnResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, PowerOnResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 机器人下电
     *
     * @generated from protobuf rpc: PowerOff(google.protobuf.Empty) returns (rosc.PowerOffResponse);
     */
    powerOff(input: Empty, options?: RpcOptions): UnaryCall<Empty, PowerOffResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, PowerOffResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 机器人清错
     *
     * @generated from protobuf rpc: ClearError(google.protobuf.Empty) returns (rosc.ClearErrorResponse);
     */
    clearError(input: Empty, options?: RpcOptions): UnaryCall<Empty, ClearErrorResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, ClearErrorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 示教过程中，开启获得关节数据流
     *
     * @generated from protobuf rpc: TeachStreamStartGetJoints(google.protobuf.Empty) returns (stream rosc.TeachStreamStartGetJointsResponse);
     */
    teachStreamStartGetJoints(input: Empty, options?: RpcOptions): ServerStreamingCall<Empty, TeachStreamStartGetJointsResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, TeachStreamStartGetJointsResponse>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * 示教过程中，停止获得关节数据流
     *
     * @generated from protobuf rpc: TeachStreamStopGetJoints(google.protobuf.Empty) returns (rosc.TeachStreamStopGetJointsResponse);
     */
    teachStreamStopGetJoints(input: Empty, options?: RpcOptions): UnaryCall<Empty, TeachStreamStopGetJointsResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, TeachStreamStopGetJointsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * TeachBoard开启状态流
     *
     * @generated from protobuf rpc: TeachBoardStartStatusStream(google.protobuf.Empty) returns (stream rosc.TeachBoardStartStatusStreamResponse);
     */
    teachBoardStartStatusStream(input: Empty, options?: RpcOptions): ServerStreamingCall<Empty, TeachBoardStartStatusStreamResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, TeachBoardStartStatusStreamResponse>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * TeachBoard关闭状态流
     *
     * @generated from protobuf rpc: TeachBoardStopStatusStream(google.protobuf.Empty) returns (rosc.TeachBoardStopStatusStreamResponse);
     */
    teachBoardStopStatusStream(input: Empty, options?: RpcOptions): UnaryCall<Empty, TeachBoardStopStatusStreamResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, TeachBoardStopStatusStreamResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 急停
     *
     * @generated from protobuf rpc: EmergencyStop(rosc.EmergencyStopRequest) returns (rosc.EmergencyStopResponse);
     */
    emergencyStop(input: EmergencyStopRequest, options?: RpcOptions): UnaryCall<EmergencyStopRequest, EmergencyStopResponse> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmergencyStopRequest, EmergencyStopResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 急停恢复
     *
     * @generated from protobuf rpc: EmergencyRecover(rosc.EmergencyRecoverRequest) returns (rosc.EmergencyRecoverResponse);
     */
    emergencyRecover(input: EmergencyRecoverRequest, options?: RpcOptions): UnaryCall<EmergencyRecoverRequest, EmergencyRecoverResponse> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmergencyRecoverRequest, EmergencyRecoverResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 示教相关接口
     * 开始示教liqingfengzzu@163.com
     * TODO(liqingfengzzu@163.com): 该接口临时废弃，未正常实现和测试
     *
     * @deprecated
     * @generated from protobuf rpc: TeachJogStart(rosc.TeachJogStartRequest) returns (rosc.TeachJogStartResponse);
     */
    teachJogStart(input: TeachJogStartRequest, options?: RpcOptions): UnaryCall<TeachJogStartRequest, TeachJogStartResponse> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<TeachJogStartRequest, TeachJogStartResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 结束示教
     * TODO(liqingfengzzu@163.com): 该接口临时废弃，未正常实现和测试
     *
     * @deprecated
     * @generated from protobuf rpc: TeachJogStop(rosc.TeachJogStopRequest) returns (rosc.TeachJogStopResponse);
     */
    teachJogStop(input: TeachJogStopRequest, options?: RpcOptions): UnaryCall<TeachJogStopRequest, TeachJogStopResponse> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<TeachJogStopRequest, TeachJogStopResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 示教单独点动
     *
     * @generated from protobuf rpc: TeachMoveStep(rosc.TeachMoveStepRequest) returns (rosc.TeachMoveStepResponse);
     */
    teachMoveStep(input: TeachMoveStepRequest, options?: RpcOptions): UnaryCall<TeachMoveStepRequest, TeachMoveStepResponse> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<TeachMoveStepRequest, TeachMoveStepResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TeachSavePosition(rosc.TeachSavePositionRequest) returns (rosc.TeachSavePositionResponse);
     */
    teachSavePosition(input: TeachSavePositionRequest, options?: RpcOptions): UnaryCall<TeachSavePositionRequest, TeachSavePositionResponse> {
        const method = this.methods[13], opt = this._transport.mergeOptions(options);
        return stackIntercept<TeachSavePositionRequest, TeachSavePositionResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TeachSetVelocity(rosc.TeachSetVelocityRequest) returns (rosc.TeachSetVelocityResponse);
     */
    teachSetVelocity(input: TeachSetVelocityRequest, options?: RpcOptions): UnaryCall<TeachSetVelocityRequest, TeachSetVelocityResponse> {
        const method = this.methods[14], opt = this._transport.mergeOptions(options);
        return stackIntercept<TeachSetVelocityRequest, TeachSetVelocityResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TeachGetVelocity(rosc.TeachGetVelocityRequest) returns (rosc.TeachGetVelocityResponse);
     */
    teachGetVelocity(input: TeachGetVelocityRequest, options?: RpcOptions): UnaryCall<TeachGetVelocityRequest, TeachGetVelocityResponse> {
        const method = this.methods[15], opt = this._transport.mergeOptions(options);
        return stackIntercept<TeachGetVelocityRequest, TeachGetVelocityResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TeachMove(rosc.TeachMoveRequest) returns (rosc.TeachMoveResponse);
     */
    teachMove(input: TeachMoveRequest, options?: RpcOptions): UnaryCall<TeachMoveRequest, TeachMoveResponse> {
        const method = this.methods[16], opt = this._transport.mergeOptions(options);
        return stackIntercept<TeachMoveRequest, TeachMoveResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * *
     * 获取jog速度的配置
     *
     * @generated from protobuf rpc: GetJogVelocity(google.protobuf.Empty) returns (rosc.JogVelocityResponse);
     */
    getJogVelocity(input: Empty, options?: RpcOptions): UnaryCall<Empty, JogVelocityResponse> {
        const method = this.methods[17], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, JogVelocityResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetJogVelocityLevel(rosc.SetJogVelocityLevelRequest) returns (rosc.JogVelocityResponse);
     */
    setJogVelocityLevel(input: SetJogVelocityLevelRequest, options?: RpcOptions): UnaryCall<SetJogVelocityLevelRequest, JogVelocityResponse> {
        const method = this.methods[18], opt = this._transport.mergeOptions(options);
        return stackIntercept<SetJogVelocityLevelRequest, JogVelocityResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 配置管理
     *
     * @generated from protobuf rpc: GetRobotSetting(rosc.RobotSettingRequest) returns (rosc.RobotSettingResponse);
     */
    getRobotSetting(input: RobotSettingRequest, options?: RpcOptions): UnaryCall<RobotSettingRequest, RobotSettingResponse> {
        const method = this.methods[19], opt = this._transport.mergeOptions(options);
        return stackIntercept<RobotSettingRequest, RobotSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SaveJointSetting(rosc.SaveJointSettingRequest) returns (rosc.SaveJointSettingResponse);
     */
    saveJointSetting(input: SaveJointSettingRequest, options?: RpcOptions): UnaryCall<SaveJointSettingRequest, SaveJointSettingResponse> {
        const method = this.methods[20], opt = this._transport.mergeOptions(options);
        return stackIntercept<SaveJointSettingRequest, SaveJointSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SaveIOSetting(rosc.SaveIOSettingRequest) returns (rosc.SaveIOSettingResponse);
     */
    saveIOSetting(input: SaveIOSettingRequest, options?: RpcOptions): UnaryCall<SaveIOSettingRequest, SaveIOSettingResponse> {
        const method = this.methods[21], opt = this._transport.mergeOptions(options);
        return stackIntercept<SaveIOSettingRequest, SaveIOSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 获取关节配置
     *
     * @generated from protobuf rpc: GetJointSetting(google.protobuf.Empty) returns (rosc.GetJointSettingResponse);
     */
    getJointSetting(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetJointSettingResponse> {
        const method = this.methods[22], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, GetJointSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 配置设备配置
     *
     * @generated from protobuf rpc: GetDeviceSetting(google.protobuf.Empty) returns (rosc.GetDeviceSettingResponse);
     */
    getDeviceSetting(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetDeviceSettingResponse> {
        const method = this.methods[23], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, GetDeviceSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 获取IO配置
     *
     * @generated from protobuf rpc: GetIOSetting(google.protobuf.Empty) returns (rosc.GetIOSettingResponse);
     */
    getIOSetting(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetIOSettingResponse> {
        const method = this.methods[24], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, GetIOSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 获得速度配置
     *
     * @generated from protobuf rpc: GetSpeedConfig(rosc.GetSpeedConfigRequest) returns (rosc.GetSpeedConfigResponse);
     */
    getSpeedConfig(input: GetSpeedConfigRequest, options?: RpcOptions): UnaryCall<GetSpeedConfigRequest, GetSpeedConfigResponse> {
        const method = this.methods[25], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetSpeedConfigRequest, GetSpeedConfigResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 保存速度配置
     *
     * @generated from protobuf rpc: SaveSpeedConfig(rosc.SaveSpeedConfigRequest) returns (rosc.SaveSpeedConfigResponse);
     */
    saveSpeedConfig(input: SaveSpeedConfigRequest, options?: RpcOptions): UnaryCall<SaveSpeedConfigRequest, SaveSpeedConfigResponse> {
        const method = this.methods[26], opt = this._transport.mergeOptions(options);
        return stackIntercept<SaveSpeedConfigRequest, SaveSpeedConfigResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetSorterConfig(rosc.GetSorterConfigRequest) returns (rosc.GetSorterConfigResponse);
     */
    getSorterConfig(input: GetSorterConfigRequest, options?: RpcOptions): UnaryCall<GetSorterConfigRequest, GetSorterConfigResponse> {
        const method = this.methods[27], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetSorterConfigRequest, GetSorterConfigResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SaveSorterConfig(rosc.SaveSorterConfigRequest) returns (rosc.SaveSorterConfigResponse);
     */
    saveSorterConfig(input: SaveSorterConfigRequest, options?: RpcOptions): UnaryCall<SaveSorterConfigRequest, SaveSorterConfigResponse> {
        const method = this.methods[28], opt = this._transport.mergeOptions(options);
        return stackIntercept<SaveSorterConfigRequest, SaveSorterConfigResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 数据管理
     *
     * @generated from protobuf rpc: DeletePoint(rosc.DeletePointRequest) returns (rosc.DeletePointResponse);
     */
    deletePoint(input: DeletePointRequest, options?: RpcOptions): UnaryCall<DeletePointRequest, DeletePointResponse> {
        const method = this.methods[29], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeletePointRequest, DeletePointResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAllPointNames(rosc.GetAllPointNamesRequest) returns (rosc.GetAllPointNamesResponse);
     */
    getAllPointNames(input: GetAllPointNamesRequest, options?: RpcOptions): UnaryCall<GetAllPointNamesRequest, GetAllPointNamesResponse> {
        const method = this.methods[30], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAllPointNamesRequest, GetAllPointNamesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DownloadPointFile(rosc.DownloadPointFileRequest) returns (stream rosc.DownloadPointFileResponse);
     */
    downloadPointFile(input: DownloadPointFileRequest, options?: RpcOptions): ServerStreamingCall<DownloadPointFileRequest, DownloadPointFileResponse> {
        const method = this.methods[31], opt = this._transport.mergeOptions(options);
        return stackIntercept<DownloadPointFileRequest, DownloadPointFileResponse>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GoTeachJoint(rosc.GoTeachJointRequest) returns (rosc.GoTeachJointResponse);
     */
    goTeachJoint(input: GoTeachJointRequest, options?: RpcOptions): UnaryCall<GoTeachJointRequest, GoTeachJointResponse> {
        const method = this.methods[32], opt = this._transport.mergeOptions(options);
        return stackIntercept<GoTeachJointRequest, GoTeachJointResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 指令
     *
     * @generated from protobuf rpc: TeachInstruction(rosc.TeachInstructionRequest) returns (rosc.TeachInstructionResponse);
     */
    teachInstruction(input: TeachInstructionRequest, options?: RpcOptions): UnaryCall<TeachInstructionRequest, TeachInstructionResponse> {
        const method = this.methods[33], opt = this._transport.mergeOptions(options);
        return stackIntercept<TeachInstructionRequest, TeachInstructionResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: OperateWafer(rosc.OperateWaferRequest) returns (rosc.OperateWaferResponse);
     */
    operateWafer(input: OperateWaferRequest, options?: RpcOptions): UnaryCall<OperateWaferRequest, OperateWaferResponse> {
        const method = this.methods[34], opt = this._transport.mergeOptions(options);
        return stackIntercept<OperateWaferRequest, OperateWaferResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DebugWafer(rosc.DebugWaferRequest) returns (rosc.DebugWaferResponse);
     */
    debugWafer(input: DebugWaferRequest, options?: RpcOptions): UnaryCall<DebugWaferRequest, DebugWaferResponse> {
        const method = this.methods[35], opt = this._transport.mergeOptions(options);
        return stackIntercept<DebugWaferRequest, DebugWaferResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetPutWafer(rosc.GetPutWaferRequest) returns (rosc.GetPutWaferResponse);
     */
    getPutWafer(input: GetPutWaferRequest, options?: RpcOptions): UnaryCall<GetPutWaferRequest, GetPutWaferResponse> {
        const method = this.methods[36], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetPutWaferRequest, GetPutWaferResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetPutWaferStop(rosc.GetPutWaferStopRequest) returns (rosc.GetPutWaferStopResponse);
     */
    getPutWaferStop(input: GetPutWaferStopRequest, options?: RpcOptions): UnaryCall<GetPutWaferStopRequest, GetPutWaferStopResponse> {
        const method = this.methods[37], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetPutWaferStopRequest, GetPutWaferStopResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * IO处理
     *
     * @generated from protobuf rpc: SetIOOutputState(rosc.SetIOOutputStateRequest) returns (rosc.SetIOOutputStateResponse);
     */
    setIOOutputState(input: SetIOOutputStateRequest, options?: RpcOptions): UnaryCall<SetIOOutputStateRequest, SetIOOutputStateResponse> {
        const method = this.methods[38], opt = this._transport.mergeOptions(options);
        return stackIntercept<SetIOOutputStateRequest, SetIOOutputStateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetIOOutputState(rosc.GetIOOutputStateRequest) returns (stream rosc.GetIOOutputStateResponse);
     */
    getIOOutputState(input: GetIOOutputStateRequest, options?: RpcOptions): ServerStreamingCall<GetIOOutputStateRequest, GetIOOutputStateResponse> {
        const method = this.methods[39], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetIOOutputStateRequest, GetIOOutputStateResponse>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetIOInputState(rosc.GetIOInputStateRequest) returns (stream rosc.GetIOInputStateResponse);
     */
    getIOInputState(input: GetIOInputStateRequest, options?: RpcOptions): ServerStreamingCall<GetIOInputStateRequest, GetIOInputStateResponse> {
        const method = this.methods[40], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetIOInputStateRequest, GetIOInputStateResponse>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: StopGetIOInputState(rosc.StopGetIOInputStateRequest) returns (rosc.StopGetIOInputStateResponse);
     */
    stopGetIOInputState(input: StopGetIOInputStateRequest, options?: RpcOptions): UnaryCall<StopGetIOInputStateRequest, StopGetIOInputStateResponse> {
        const method = this.methods[41], opt = this._transport.mergeOptions(options);
        return stackIntercept<StopGetIOInputStateRequest, StopGetIOInputStateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 查询mapping
     *
     * @generated from protobuf rpc: SearchMapping(rosc.SearchMappingRequest) returns (rosc.SearchMappingResponse);
     */
    searchMapping(input: SearchMappingRequest, options?: RpcOptions): UnaryCall<SearchMappingRequest, SearchMappingResponse> {
        const method = this.methods[42], opt = this._transport.mergeOptions(options);
        return stackIntercept<SearchMappingRequest, SearchMappingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 异常处理
     *
     * @generated from protobuf rpc: GetStreamException(stream rosc.GetStreamExceptionRequest) returns (stream rosc.GetStreamExceptionResponse);
     */
    getStreamException(options?: RpcOptions): DuplexStreamingCall<GetStreamExceptionRequest, GetStreamExceptionResponse> {
        const method = this.methods[43], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetStreamExceptionRequest, GetStreamExceptionResponse>("duplex", this._transport, method, opt);
    }
    /**
     * @generated from protobuf rpc: GetException(rosc.GetExceptionRequest) returns (rosc.GetExceptionResponse);
     */
    getException(input: GetExceptionRequest, options?: RpcOptions): UnaryCall<GetExceptionRequest, GetExceptionResponse> {
        const method = this.methods[44], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetExceptionRequest, GetExceptionResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteException(rosc.DeleteExceptionRequest) returns (rosc.DeleteExceptionResponse);
     */
    deleteException(input: DeleteExceptionRequest, options?: RpcOptions): UnaryCall<DeleteExceptionRequest, DeleteExceptionResponse> {
        const method = this.methods[45], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteExceptionRequest, DeleteExceptionResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 伺服状态
     *
     * @generated from protobuf rpc: SlaveState(stream rosc.SlaveStateRequest) returns (stream rosc.SlaveStateResponse);
     */
    slaveState(options?: RpcOptions): DuplexStreamingCall<SlaveStateRequest, SlaveStateResponse> {
        const method = this.methods[46], opt = this._transport.mergeOptions(options);
        return stackIntercept<SlaveStateRequest, SlaveStateResponse>("duplex", this._transport, method, opt);
    }
    /**
     * Layout
     *
     * @generated from protobuf rpc: StartLayoutSimulation(rosc.StartLayoutSimulationRequest) returns (rosc.StartLayoutSimulationResponse);
     */
    startLayoutSimulation(input: StartLayoutSimulationRequest, options?: RpcOptions): UnaryCall<StartLayoutSimulationRequest, StartLayoutSimulationResponse> {
        const method = this.methods[47], opt = this._transport.mergeOptions(options);
        return stackIntercept<StartLayoutSimulationRequest, StartLayoutSimulationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetLayoutRobotPositionStream(rosc.GetLayoutRobotPositionRequest) returns (stream rosc.GetLayoutRobotPositionResponse);
     */
    getLayoutRobotPositionStream(input: GetLayoutRobotPositionRequest, options?: RpcOptions): ServerStreamingCall<GetLayoutRobotPositionRequest, GetLayoutRobotPositionResponse> {
        const method = this.methods[48], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetLayoutRobotPositionRequest, GetLayoutRobotPositionResponse>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: StopGetLayoutRobotPositionStream(rosc.StopGetLayoutRobotPositionRequest) returns (rosc.StopGetLayoutRobotPositionResponse);
     */
    stopGetLayoutRobotPositionStream(input: StopGetLayoutRobotPositionRequest, options?: RpcOptions): UnaryCall<StopGetLayoutRobotPositionRequest, StopGetLayoutRobotPositionResponse> {
        const method = this.methods[49], opt = this._transport.mergeOptions(options);
        return stackIntercept<StopGetLayoutRobotPositionRequest, StopGetLayoutRobotPositionResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 单轴零点标定
     *
     * @generated from protobuf rpc: SingleAxisZeroCalibrate(rosc.SingleAxisZeroCalibrateRequest) returns (rosc.SingleAxisZeroCalibrateResponse);
     */
    singleAxisZeroCalibrate(input: SingleAxisZeroCalibrateRequest, options?: RpcOptions): UnaryCall<SingleAxisZeroCalibrateRequest, SingleAxisZeroCalibrateResponse> {
        const method = this.methods[50], opt = this._transport.mergeOptions(options);
        return stackIntercept<SingleAxisZeroCalibrateRequest, SingleAxisZeroCalibrateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: MappingCalibrate(rosc.MappingCalibrateRequest) returns (rosc.MappingCalibrateResponse);
     */
    mappingCalibrate(input: MappingCalibrateRequest, options?: RpcOptions): UnaryCall<MappingCalibrateRequest, MappingCalibrateResponse> {
        const method = this.methods[51], opt = this._transport.mergeOptions(options);
        return stackIntercept<MappingCalibrateRequest, MappingCalibrateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: MappingSetting(rosc.MappingSettingRequest) returns (rosc.MappingSettingResponse);
     */
    mappingSetting(input: MappingSettingRequest, options?: RpcOptions): UnaryCall<MappingSettingRequest, MappingSettingResponse> {
        const method = this.methods[52], opt = this._transport.mergeOptions(options);
        return stackIntercept<MappingSettingRequest, MappingSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SaveMappingSetting(rosc.SaveMappingSettingRequest) returns (rosc.SaveMappingSettingResponse);
     */
    saveMappingSetting(input: SaveMappingSettingRequest, options?: RpcOptions): UnaryCall<SaveMappingSettingRequest, SaveMappingSettingResponse> {
        const method = this.methods[53], opt = this._transport.mergeOptions(options);
        return stackIntercept<SaveMappingSettingRequest, SaveMappingSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SetSolenoid(rosc.SetSolenoidRequest) returns (rosc.SetSolenoidResponse);
     */
    setSolenoid(input: SetSolenoidRequest, options?: RpcOptions): UnaryCall<SetSolenoidRequest, SetSolenoidResponse> {
        const method = this.methods[54], opt = this._transport.mergeOptions(options);
        return stackIntercept<SetSolenoidRequest, SetSolenoidResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetSolenoid(rosc.GetSolenoidRequest) returns (rosc.GetSolenoidResponse);
     */
    getSolenoid(input: GetSolenoidRequest, options?: RpcOptions): UnaryCall<GetSolenoidRequest, GetSolenoidResponse> {
        const method = this.methods[55], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetSolenoidRequest, GetSolenoidResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetEnableMapping(rosc.GetEnableMappingRequest) returns (rosc.GetEnableMappingResponse);
     */
    getEnableMapping(input: GetEnableMappingRequest, options?: RpcOptions): UnaryCall<GetEnableMappingRequest, GetEnableMappingResponse> {
        const method = this.methods[56], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetEnableMappingRequest, GetEnableMappingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SaveEnableMapping(rosc.SaveEnableMappingRequest) returns (rosc.SaveEnableMappingResponse);
     */
    saveEnableMapping(input: SaveEnableMappingRequest, options?: RpcOptions): UnaryCall<SaveEnableMappingRequest, SaveEnableMappingResponse> {
        const method = this.methods[57], opt = this._transport.mergeOptions(options);
        return stackIntercept<SaveEnableMappingRequest, SaveEnableMappingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 修改控制系统ip
     *
     * @generated from protobuf rpc: RedifyControllerIP(rosc.RedifyControllerIPRequest) returns (rosc.RedifyControllerIPResponse);
     */
    redifyControllerIP(input: RedifyControllerIPRequest, options?: RpcOptions): UnaryCall<RedifyControllerIPRequest, RedifyControllerIPResponse> {
        const method = this.methods[58], opt = this._transport.mergeOptions(options);
        return stackIntercept<RedifyControllerIPRequest, RedifyControllerIPResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 获取伺服编码器信息
     *
     * @generated from protobuf rpc: GetServoEncode(rosc.GetServoEncodeRequest) returns (rosc.GetServoEncodeResponse);
     */
    getServoEncode(input: GetServoEncodeRequest, options?: RpcOptions): UnaryCall<GetServoEncodeRequest, GetServoEncodeResponse> {
        const method = this.methods[59], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetServoEncodeRequest, GetServoEncodeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdatePointFile(stream rosc.UpdatePointFileRequest) returns (stream rosc.UpdatePointFileResponse);
     */
    updatePointFile(options?: RpcOptions): DuplexStreamingCall<UpdatePointFileRequest, UpdatePointFileResponse> {
        const method = this.methods[60], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdatePointFileRequest, UpdatePointFileResponse>("duplex", this._transport, method, opt);
    }
    /**
     * AWC配置管理
     *
     * @generated from protobuf rpc: GetAWCConfig(rosc.GetAWCConfigRequest) returns (rosc.GetAWCConfigResponse);
     */
    getAWCConfig(input: GetAWCConfigRequest, options?: RpcOptions): UnaryCall<GetAWCConfigRequest, GetAWCConfigResponse> {
        const method = this.methods[61], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAWCConfigRequest, GetAWCConfigResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SaveAWCConfig(rosc.SaveAWCConfigRequest) returns (rosc.SaveAWCConfigResponse);
     */
    saveAWCConfig(input: SaveAWCConfigRequest, options?: RpcOptions): UnaryCall<SaveAWCConfigRequest, SaveAWCConfigResponse> {
        const method = this.methods[62], opt = this._transport.mergeOptions(options);
        return stackIntercept<SaveAWCConfigRequest, SaveAWCConfigResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CalibrateAWCSensor(rosc.CalibrateAWCSensorRequest) returns (rosc.CalibrateAWCSensorResponse);
     */
    calibrateAWCSensor(input: CalibrateAWCSensorRequest, options?: RpcOptions): UnaryCall<CalibrateAWCSensorRequest, CalibrateAWCSensorResponse> {
        const method = this.methods[63], opt = this._transport.mergeOptions(options);
        return stackIntercept<CalibrateAWCSensorRequest, CalibrateAWCSensorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetIOInterlockSetting(rosc.GetIOInterlockSettingRequest) returns (rosc.GetIOInterlockSettingResponse);
     */
    getIOInterlockSetting(input: GetIOInterlockSettingRequest, options?: RpcOptions): UnaryCall<GetIOInterlockSettingRequest, GetIOInterlockSettingResponse> {
        const method = this.methods[64], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetIOInterlockSettingRequest, GetIOInterlockSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SaveIOInterlockSetting(rosc.SaveIOInterlockSettingRequest) returns (rosc.SaveIOInterlockSettingResponse);
     */
    saveIOInterlockSetting(input: SaveIOInterlockSettingRequest, options?: RpcOptions): UnaryCall<SaveIOInterlockSettingRequest, SaveIOInterlockSettingResponse> {
        const method = this.methods[65], opt = this._transport.mergeOptions(options);
        return stackIntercept<SaveIOInterlockSettingRequest, SaveIOInterlockSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CalibrateWaferSensor(rosc.CalibrateWaferSensorRequest) returns (rosc.CalibrateWaferSensorResponse);
     */
    calibrateWaferSensor(input: CalibrateWaferSensorRequest, options?: RpcOptions): UnaryCall<CalibrateWaferSensorRequest, CalibrateWaferSensorResponse> {
        const method = this.methods[66], opt = this._transport.mergeOptions(options);
        return stackIntercept<CalibrateWaferSensorRequest, CalibrateWaferSensorResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FindZero(rosc.FindZeroRequest) returns (rosc.FindZeroResponse);
     */
    findZero(input: FindZeroRequest, options?: RpcOptions): UnaryCall<FindZeroRequest, FindZeroResponse> {
        const method = this.methods[67], opt = this._transport.mergeOptions(options);
        return stackIntercept<FindZeroRequest, FindZeroResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetStageSetting(rosc.GetStageSettingRequest) returns (rosc.GetStageSettingResponse);
     */
    getStageSetting(input: GetStageSettingRequest, options?: RpcOptions): UnaryCall<GetStageSettingRequest, GetStageSettingResponse> {
        const method = this.methods[68], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetStageSettingRequest, GetStageSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SaveStageSetting(rosc.SaveStageSettingRequest) returns (rosc.SaveStageSettingResponse);
     */
    saveStageSetting(input: SaveStageSettingRequest, options?: RpcOptions): UnaryCall<SaveStageSettingRequest, SaveStageSettingResponse> {
        const method = this.methods[69], opt = this._transport.mergeOptions(options);
        return stackIntercept<SaveStageSettingRequest, SaveStageSettingResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * 设置运行模式
     *
     * @generated from protobuf rpc: SetRunningMode(rosc.SetRunningModeRequest) returns (rosc.SetRunningModeResponse);
     */
    setRunningMode(input: SetRunningModeRequest, options?: RpcOptions): UnaryCall<SetRunningModeRequest, SetRunningModeResponse> {
        const method = this.methods[70], opt = this._transport.mergeOptions(options);
        return stackIntercept<SetRunningModeRequest, SetRunningModeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CalibrateRobotParam(rosc.CalibrateRobotParamRequest) returns (rosc.CalibrateRobotParamResponse);
     */
    calibrateRobotParam(input: CalibrateRobotParamRequest, options?: RpcOptions): UnaryCall<CalibrateRobotParamRequest, CalibrateRobotParamResponse> {
        const method = this.methods[71], opt = this._transport.mergeOptions(options);
        return stackIntercept<CalibrateRobotParamRequest, CalibrateRobotParamResponse>("unary", this._transport, method, opt, input);
    }
}
